# freeze player
# - run freeze_player def:<duration> player:<player>
freeze_player2:
  type: task
  debug: false
  speed: 0
  script:
  - flag <player> mechanic.freeze_player.is_frozen duration:<def[1].as_duration.add[d@1s]||11s>
  - spawn e@armor_stand[visible=false;marker=true;gravity=false] <player.location.add[0,0.35,0]> save:marker
  - flag <player> mechanic.freeze_player.marker:<entry[marker].spawned_entities.get[1]>
  - mount <player>|<entry[marker].spawned_entities.get[1]>
  - run unfreeze_player delay:<def[1].as_duration||10s>

#keep them frozen
freeze_player_events2:
  type: world
  debug: false
  events:
    on player steers entity:
    - if <player.has_flag[mechanic.freeze_player.is_frozen]> {
      - determine cancelled
      }
# unfreeze player
# - run unfreeze_player player:<player>
unfreeze_player2:
  type: task
  debug: false
  speed: 0
  script:
  - if <player.has_flag[mechanic.freeze_player.is_frozen].not> {
    - queue clear
    }
  - define location <player.location.add[0,0.5,0]>
  - flag <player> mechanic.freeze_player.is_frozen:!
  - define marker <player.flag[mechanic.freeze_player.marker].as_entity||null>
  - if <def[marker].is_spawned||false> {
    - remove <def[marker]>
    }
  - teleport <player> <def[location]>
